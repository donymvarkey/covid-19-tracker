{"version":3,"sources":["components/Cards/Cards.jsx","components/Cases/Cases.jsx","components/Cases/IndividualStates.jsx","components/NavBar/NavBar.jsx","components/Footer/Footer.js","components/Charts/Charts.jsx","api/index.js","App.js","index.js"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","Container","Row","Col","className","Date","toDateString","Card","Body","Title","Subtitle","Text","start","end","value","duration","separator","Cases","IndividualStates","status","tableItems","map","item","provinceState","active","Table","bordered","responsive","NavBar","Navbar","Brand","xs","md","Image","src","alt","fluid","href","role","aria-label","Footer","expand","variant","bg","rel","target","Charts","dataLocal","doughnutChartGlobal","labels","datasets","label","backgroundColor","options","legend","display","title","text","doughnutChartLocal","sm","url","fetchData","a","axios","get","modifiedData","fetchCasesIndia","fetchIndividualStatesCases","response","console","log","App","state","dataIndividualStates","this","setState","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e93cbd7a.chunk.js","sourcesContent":["import React from 'react'\nimport { Card, Container, Row, Col} from 'react-bootstrap'\nimport CountUp from 'react-countup';\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n    if(!confirmed) {\n        return (\"Loading...\")\n    }\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <p className=\"h1\">Global Rate</p>\n                </Col>\n                <Col>\n                    <p className=\"text-muted small text-end\">Last Updated: {new Date(lastUpdate).toDateString()}</p>\n                </Col>\n            </Row>\n            <Row className=\"p-2 gap-2\">\n            \n                <Col>\n                    <Card >\n                        <Card.Body>\n                            <Card.Title className=\"fw-medium text-primary\">Infected</Card.Title>\n                            <Card.Subtitle className=\"mb-2 small fw-normal text-muted\">Total COVID-19 infected people</Card.Subtitle>\n                            <Card.Text className=\"display-3\">\n                                <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col>\n                    <Card >\n                        <Card.Body>\n                            <Card.Title className=\"fw-medium text-success\">Recovered</Card.Title>\n                            <Card.Subtitle className=\"mb-2 fw-normal small text-muted\">Total recoveries from COVID-19</Card.Subtitle>\n                            <Card.Text className=\"display-3\">\n                                <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col>\n                    <Card >\n                        <Card.Body>\n                            <Card.Title className=\"fw-medium text-danger\">Deaths</Card.Title>\n                            <Card.Subtitle className=\"mb-2 fw-normal small text-muted\">Total deaths from COVID-19</Card.Subtitle>\n                            <Card.Text className=\"display-3\">\n                                <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Cards;","import React from 'react'\nimport { Card, Container, Row, Col} from 'react-bootstrap'\nimport CountUp from 'react-countup';\n\nconst Cases = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n    if(!confirmed) {\n        return(\"Loading...\")\n    }\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <p className=\"h1\">India</p>\n                </Col>\n            </Row>\n            <Row className=\"p-2 gap-2\">\n                <Col>\n                    <Card >\n                        <Card.Body>\n                            <Card.Title className=\"fw-medium text-primary\">Infected</Card.Title>\n                            <Card.Subtitle className=\"mb-2 small fw-normal text-muted\">Total COVID-19 infected people</Card.Subtitle>\n                            <Card.Text className=\"display-3\">\n                                <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col>\n                    <Card >\n                        <Card.Body>\n                            <Card.Title className=\"fw-medium text-success\">Recovered</Card.Title>\n                            <Card.Subtitle className=\"mb-2 fw-normal small text-muted\">Total recoveries from COVID-19</Card.Subtitle>\n                            <Card.Text className=\"display-3\">\n                                <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col>\n                    <Card >\n                        <Card.Body>\n                            <Card.Title className=\"fw-medium text-danger\">Deaths</Card.Title>\n                            <Card.Subtitle className=\"mb-2 fw-normal small text-muted\">Total deaths from COVID-19</Card.Subtitle>\n                            <Card.Text className=\"display-3\">\n                                <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Cases","import React from 'react'\nimport { Container, Table } from 'react-bootstrap'\n\nconst IndividualStates = (data) => {\n    if(!data.data.status) {\n        return('Loading...')\n    }\n    const tableItems = data.data.data.map((item) => {\n        return(\n            <tbody>\n                <tr>\n                    <td>{item.provinceState}</td>\n                    <td>{item.active}</td>\n                    <td>{item.confirmed}</td>\n                    <td>{item.recovered}</td>\n                    <td>{item.deaths}</td>\n                </tr>\n            </tbody>\n        )\n    })\n    return (\n        <Container className=\"p-4 gap-5\">\n            <Table className=\"table caption-top\" bordered responsive>\n                <thead>\n                    <tr>\n                        <th>State</th>\n                        <th>Active Cases</th>\n                        <th>Confirmed</th>\n                        <th>Recovered</th>\n                        <th>Deaths</th>\n                    </tr>\n                </thead>\n                {tableItems}\n            </Table>\n\n        </Container>\n    )\n}\n\nexport default IndividualStates","import React from 'react'\nimport {Navbar, Row, Col, Image, Container} from 'react-bootstrap'\n\nconst NavBar = () => {\n    return (\n        <Container className=\"p-2\">\n            <Navbar.Brand>\n                <Row>\n                    <Col xs={12} md={6}>\n                        <Image src=\"https://i.ibb.co/7QpKsCX/image.png\" alt=\"covid-19\" fluid/>\n                    </Col>\n                    <Col className=\"text-end p-3\">\n                        <a className=\"text-decoration-none\" href=\"https://github.com/donymvarkey/covid-19-tracker.git\">\n                            <i className=\"bi-github h3 text-dark\" role=\"img\" aria-label=\"GitHub\"></i>\n                        </a>\n                        \n                    </Col>\n                </Row>\n            </Navbar.Brand>\n        </Container>\n    )\n}\n\nexport default NavBar;","import React from 'react'\nimport { Container, Navbar } from 'react-bootstrap'\n\nconst Footer = () => {\n    return (\n        <Container>\n            <Navbar className=\"p-2\" expand=\"lg\" variant=\"light\" bg=\"white\">\n                <p className=\" text-dark text-end \">\n                    Credits: <a className=\"text-decoration-none text-primary\" rel=\"noreferrer\" href=\"https://github.com/mathdroid/covid-19-api\" target=\"_blank\">mathdroid/covid-19-api</a>\n                </p>\n            </Navbar>\n        </Container>\n    )\n}\n\nexport default Footer;","import React from 'react'\nimport { Doughnut } from 'react-chartjs-2';\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Charts = ({data: {data, dataLocal}}) => {\n    const doughnutChartGlobal = (\n        data.confirmed ? (\n            <Doughnut\n                data={{\n                labels: ['Infected', 'Recovered', 'Deaths'],\n                datasets: [\n                    {\n                    label: 'People',\n                    backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n                    data: [data.confirmed.value, data.recovered.value, data.deaths.value],\n                    },\n                ],\n                }}\n                options={{\n                legend: { display: false },\n                title: { display: true, text: 'India' },\n                }}\n            />\n        ) : null\n    );\n    const doughnutChartLocal = (\n        dataLocal.confirmed ? (\n            <Doughnut\n                data={{\n                labels: ['Infected', 'Recovered', 'Deaths'],\n                datasets: [\n                    {\n                    label: 'People',\n                    backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n                    data: [dataLocal.confirmed.value, dataLocal.recovered.value, dataLocal.deaths.value],\n                    },\n                ],\n                }}\n                options={{\n                legend: { display: false },\n                title: { display: true, text: 'India' },\n                }}\n            />\n        ) : null\n    );\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col sm={4} md={6}>\n                    <p className=\"text-center\">Global Stats</p>\n                    {doughnutChartGlobal}\n                </Col>\n                <Col sm={4} md={6}>\n                    <p className=\"text-center\">Local Stats (India)</p>\n                    {doughnutChartLocal}\n                </Col>\n            </Row>\n            \n        </Container>\n    )\n}\n\nexport default Charts;","import axios from 'axios'\n\nconst url = 'https://covid19.mathdro.id/api/'\n\nexport const fetchData = async () => {\n    try {\n        var { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(url);\n\n        const modifiedData = {\n            confirmed,\n            recovered, \n            deaths, \n            lastUpdate\n        }\n        return modifiedData;\n    } catch (error) {\n        return error\n    }\n}\n\nexport const fetchCasesIndia = async () => {\n    try {\n        var { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(`${url}countries/india`);\n\n        const modifiedData = {\n            confirmed,\n            recovered, \n            deaths, \n            lastUpdate\n        }\n        return modifiedData;\n    } catch (error) {\n        return error\n    }\n}\n\nexport const fetchIndividualStatesCases = async () => {\n    try {\n        var response = await axios.get(`${url}countries/india/confirmed`)\n        console.log(response)\n        // return(\n        //     data.map(({provinceState, confirmed, recovered, deaths, active, lastUpdate}) => ({provinceState, confirmed, recovered, deaths, active, lastUpdate}))\n        // )\n        return(response);\n    } catch (error) {\n        return error\n    }\n}\n","import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css'\nimport { Cards, Cases, IndividualStates, Navbar, Footer, Charts } from './components'\nimport { fetchData, fetchCasesIndia, fetchIndividualStatesCases } from './api'\n\nexport default class App extends Component {\n    state = {\n        data: {},\n        dataLocal: {},\n        dataIndividualStates: {}\n    }\n\n    async componentDidMount () {\n        const data = await fetchData();\n        const dataLocal = await fetchCasesIndia();\n        const dataIndividualStates = await fetchIndividualStatesCases()\n\n        this.setState({\n            data: data,\n            dataLocal: dataLocal,\n            dataIndividualStates: dataIndividualStates\n        })\n    }\n\n    render() {\n        const {data} = this.state;\n        const {dataLocal} = this.state;\n        const {dataIndividualStates} = this.state;\n        return (\n            <div>\n                <Navbar />\n                <Cards data={data}/>\n                <Cases data={dataLocal}/>\n                <Charts data={this.state}/>\n                <IndividualStates data={dataIndividualStates}/>\n                <Footer />\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)"],"sourceRoot":""}